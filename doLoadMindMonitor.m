function EEG = doLoadMindMonitor(fileName,whichMuse,dataLines)
    
    % script to read in MindMonitor Muse data and puts it into EEGLAB format
    % whichMuse = 1 for Muse 2014 or 2016 and 2 for Muse2 and MuseS

    %IMPORTFILE Import data from a text file
    %  NEWMINDMONITOR20220519VERSION2 = IMPORTFILE(FILENAME) reads data from
    %  text file FILENAME for the default selection.  Returns the data as a
    %  table.
    %
    %  NEWMINDMONITOR20220519VERSION2 = IMPORTFILE(FILE, DATALINES) reads
    %  data for the specified row interval(s) of text file FILENAME. Specify
    %  DATALINES as a positive scalar integer or a N-by-2 array of positive
    %  scalar integers for dis-contiguous row intervals.
    %
    %  Example:
    %  newmindMonitor20220519Version2 = importfile("/Users/olavekrigolson/Desktop/Current Projects/Matt Heath/new_mindMonitor_2022-05-19 Version2.csv", [3, Inf]);
    %
    %  See also READTABLE.
    %
    % Auto-generated by MATLAB on 25-May-2022 08:24:40
    
    % display current filename
    disp('Loading Filename: ');
    fileName

    %% Input handling
    
    % If dataLines is not specified, define defaults
    if nargin < 3
        dataLines = [3, Inf];
    end
    
    %% Set up the Import Options and import the data
    opts = delimitedTextImportOptions("NumVariables", 35);
    
    % Specify range and delimiter
    opts.DataLines = dataLines;
    opts.Delimiter = ",";
    
    % Specify column names and types
    opts.VariableNames = ["Var1", "Var2", "Var3", "Var4", "Var5", "Var6", "Var7", "Var8", "Var9", "Var10", "Var11", "Var12", "Var13", "Var14", "Var15", "Var16", "Var17", "Var18", "Var19", "Var20", "Var21", "RAW_TP9", "RAW_AF7", "RAW_AF8", "RAW_TP10", "Var26", "Var27", "Var28", "Var29", "Var30", "Var31", "Var32", "Var33", "Var34", "Var35"];
    opts.SelectedVariableNames = ["RAW_TP9", "RAW_AF7", "RAW_AF8", "RAW_TP10"];
    opts.VariableTypes = ["string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "double", "double", "double", "double", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string"];
    
    % Specify file level properties
    opts.ExtraColumnsRule = "ignore";
    opts.EmptyLineRule = "read";
    
    % Specify variable properties
    opts = setvaropts(opts, ["Var1", "Var2", "Var3", "Var4", "Var5", "Var6", "Var7", "Var8", "Var9", "Var10", "Var11", "Var12", "Var13", "Var14", "Var15", "Var16", "Var17", "Var18", "Var19", "Var20", "Var21", "Var26", "Var27", "Var28", "Var29", "Var30", "Var31", "Var32", "Var33", "Var34", "Var35"], "WhitespaceRule", "preserve");
    opts = setvaropts(opts, ["Var1", "Var2", "Var3", "Var4", "Var5", "Var6", "Var7", "Var8", "Var9", "Var10", "Var11", "Var12", "Var13", "Var14", "Var15", "Var16", "Var17", "Var18", "Var19", "Var20", "Var21", "Var26", "Var27", "Var28", "Var29", "Var30", "Var31", "Var32", "Var33", "Var34", "Var35"], "EmptyFieldRule", "auto");
    
    % Import the data
    tempData = readtable(fileName, opts);

    tempData = table2array(tempData);

        % if only 4 columns add a marker column of all zeros
    if size(tempData,2) == 4
        fakeMarkers(1:size(tempData,1),1) = 0;
        tempData = [fakeMarkers tempData];
    end

    % check for NaNs in the tempData and remove them
    counter = size(tempData,1);
    while 1
        if sum(isnan(tempData(counter,:))) > 0
            tempData(counter,:) = [];
        end
        counter = counter - 1;
        if counter == 0
            break
        end
    end
       
    % setup the EEGLAB format
    EEG = eeg_emptyset;
    
    % default sampling rate for MUSE
    if whichMuse == 1
        EEG.srate = 220;
    else
        EEG.srate = 256;
    end
    
    % extract the EEG data from the PEER format
    eegData = [];
    eegData = tempData(:,[2 3 4 5]);

    % demean the data
    eegData(:,1) = eegData(:,1) - mean(eegData(:,1));
    eegData(:,2) = eegData(:,2) - mean(eegData(:,2));
    eegData(:,3) = eegData(:,3) - mean(eegData(:,3));
    eegData(:,4) = eegData(:,4) - mean(eegData(:,4));

    % put the data into EEGLAB format and reorder to logical order of AF7, AF8,
    % TP9, TP10 - also use detrend to remove the mean and any DC trends
    EEG.data(1,:) = detrend(eegData(:,2));
    EEG.data(2,:) = detrend(eegData(:,3));
    EEG.data(3,:) = detrend(eegData(:,1));
    EEG.data(4,:) = detrend(eegData(:,4));    
    EEG.pnts = length(EEG.data);

    % mind monitor data has no markers
    EEG.event = [];
    EEG.urevent = EEG.event;
    EEG.allMarkers = [];
    EEG.markerSummary = [];

    %correct time stamps for EEGLAB format
    EEG.times = [];
    EEG.times(1) = 0;
    for counter = 2:size(EEG.data,2)
        EEG.times(counter) = EEG.times(counter-1) + (1/EEG.srate*1000);
    end
    EEG.xmin = EEG.times(1);
    EEG.xmax = EEG.times(end)/1000;
    
    EEG.nbchan = 4;
    
    EEG.chanlocs(1).labels = 'AF7';
    EEG.chanlocs(1).type = [];
    EEG.chanlocs(1).theta = -38;
    EEG.chanlocs(1).radius = 0.5111;
    EEG.chanlocs(1).X = 0.7875;
    EEG.chanlocs(1).Y = 0.6153;
    EEG.chanlocs(1).Z = -0.0349;
    EEG.chanlocs(1).sph_theta = 38;
    EEG.chanlocs(1).sph_phi = -2.0;
    EEG.chanlocs(1).sph_radius = 1.0;
    EEG.chanlocs(1).urchan = 1;
    EEG.chanlocs(1).ref = [];

    EEG.chanlocs(2).labels = 'AF8';
    EEG.chanlocs(2).type = [];
    EEG.chanlocs(2).theta = 38;
    EEG.chanlocs(2).radius = 0.5111;
    EEG.chanlocs(2).X = 0.7875;
    EEG.chanlocs(2).Y = -0.6153;
    EEG.chanlocs(2).Z = -0.0349;
    EEG.chanlocs(2).sph_theta = -38;
    EEG.chanlocs(2).sph_phi = -2.0;
    EEG.chanlocs(2).sph_radius = 1.0;
    EEG.chanlocs(2).urchan = 2;
    EEG.chanlocs(2).ref = [];

    EEG.chanlocs(3).labels = 'TP9';
    EEG.chanlocs(3).type = [];
    EEG.chanlocs(3).theta = -108;
    EEG.chanlocs(3).radius = 0.6389;
    EEG.chanlocs(3).X = -0.2801;
    EEG.chanlocs(3).Y = 108;
    EEG.chanlocs(3).Z = -0.4226;
    EEG.chanlocs(3).sph_theta = 108;
    EEG.chanlocs(3).sph_phi = -25.0;
    EEG.chanlocs(3).sph_radius = 1.0;
    EEG.chanlocs(3).urchan = 3;
    
    EEG.chanlocs(4).labels = 'TP10';
    EEG.chanlocs(4).type = [];
    EEG.chanlocs(4).theta = 108;
    EEG.chanlocs(4).radius = 0.6389;
    EEG.chanlocs(4).X = -0.2801;
    EEG.chanlocs(4).Y = 0.0;
    EEG.chanlocs(4).Z = -0.4226;
    EEG.chanlocs(4).sph_theta = -108;
    EEG.chanlocs(4).sph_phi = -25.0;
    EEG.chanlocs(4).sph_radius = 1.0;
    EEG.chanlocs(4).urchan = 4;

end